const mongoose = require('mongoose');
const dotenv = require('dotenv');
const ldap = require('ldapjs');
const https = require('https');
const fs = require('fs');
dotenv.config({ path: './config.env' }); // Config dosyasÄ±nÄ±n yÃ¼klenmesi
const app = require('./app');
// DÃ¶nen hatalarÄ±n yakalanmasÄ± ve iÅŸlenmesi
process.on('uncaughtException', (err) => {
  console.log('UNCAUGHT EXCEPTION! ğŸ’£ Shutting down...');
  console.log(err.name, ',', err.message);
  process.exit(1);
});
// VeritabanÄ± baÄŸlantÄ±sÄ±nÄ±n oluÅŸturulmasÄ±
const DB = process.env.DATABASE.replace(
  '<PASSWORD>',
  process.env.DATABASE_PASSWORD
);
mongoose.connect(DB).then(() => console.log('DB connection succesfull!'));

// Sunucunun baÅŸlatÄ±lmasÄ±
const port = process.env.PORT || 8000;
const options = {
  key: fs.readFileSync('./Certification/cert.key'),
  cert: fs.readFileSync('./Certification/cert.crt'),
};
const server = https.createServer(options, app);
server.listen(port, () => {
  console.log(`App running on port ${port}...`);
});

// DÃ¶nen hatalarÄ±n yakalanmasÄ± ve iÅŸlenmesi
process.on('unhandledRejection', (err) => {
  console.log('UNHANDLED REJECTION! ğŸ’£ Shutting down...');
  console.log(err.name, ',', err.message);
  server.close(() => {
    process.exit(1);
  });
});
